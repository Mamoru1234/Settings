#!/bin/bash

PROJECT_PATH=~/projects/riot
DEST_DIR=~/.riot_tmp

GREEN="2;32"
RED="0;31"

color_echo() {
  echo -e "\e[$1m$2\e[0m"
}

build_cloud() {
  if [ ! -d "$DEST_DIR" ]; then
    color_echo $GREEN "Creating directory for temporary files: $DEST_DIR"
    mkdir -p $DEST_DIR
  fi

  # ./gradlew clean --no-daemon
  # ./gradlew :riot-cloud:prepareCloudDockerFiles --no-daemon
  # ./gradlew :docker:riot-postgres-9.6:buildDockerImage --no-daemon
  # ./gradlew :docker:riot-cassandra:buildDockerImage --no-daemon
  # ./gradlew :riot-edge-node-application:buildDockerImage -PforceDockerBuildImages --no-daemon
  # ./gradlew :riot-cloud:buildDockerImage -PforceDockerBuildImages --no-daemon

  PG_FOLDER="./riot-cloud/build/docker-compose/postgres-scripts"
  if [ ! -d "$PG_FOLDER" ]; then
    color_echo $RED "postgres-scripts could not be found verify your build"
    exit
  fi
  cp -rf $PG_FOLDER "$DEST_DIR/postgres-scripts"

  COMPOSE_PATH="./riot-cloud/build/docker-compose/riot-cloud-mac.yml"
  if [ ! -f "$COMPOSE_PATH" ]; then
    color_echo $RED "compose file could not be found verify your build"
    exit
  fi
  cp -f $COMPOSE_PATH "$DEST_DIR/compose.yml"
}

verify_project_path() {
  if [ ! -d "$PROJECT_PATH" ]; then
    color_echo $RED "Project path is not valid: $PROJECT_PATH"
    exit
  fi
}

echo ""

verify_project_path

if [ -z "$1" ]; then
  color_echo $RED "Provide some command (start, build, up, down, clean)"
  exit
fi

case "$1" in
  "build")
    cd $PROJECT_PATH
    build_cloud
  ;;
  "up")
    docker-compose -f "$DEST_DIR/compose.yml" -p riot-cloud up -d
  ;;
  "down")
    docker-compose -f "$DEST_DIR/compose.yml" -p riot-cloud down
  ;;
  "clean")
    rm -rf $DEST_DIR
  ;;
  "start")
    docker-compose -f "$DEST_DIR/compose.yml" -p riot-cloud down
    cd $PROJECT_PATH
    build_cloud
    docker-compose -f "$DEST_DIR/compose.yml" -p riot-cloud up -d
  ;;
  *)
    color_echo $RED "Unknown command"
  ;;
esac

echo ""
