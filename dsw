#!/usr/bin/env bash

PROJECT_PATH="$HOME/projects/riot"

NODE_TYPE='one';
IMAGE_NAME="riotdocker.predixionsoftware.com:5000/greenwave/axon-riot-$NODE_TYPE:1.3.0-SNAPSHOT";

RIOT_CLOUD_HOST='riotcloud.predixionsoftware.com'

# Maksym
# RIOT_CLOUD_HOST='10.2.2.164'

CLOUD_NAME="riot-cloud";
CLOUD_HOST_NAME="riot-cloud-host";
CLOUD_PORT=8080;

# docker run -d --name riot-one -p 8080:4040 -p 5000:5000 -e RIOT_GATEWAY_NAME=Alexei -e RIOT_CLOUD_HOST=riotcloud.predixionsoftware.com riotdocker.predixionsoftware.com:5000/greenwave/axon-riot-one:1.3.0-SNAPSHOT
#using SIGNTERM instead of kill
function saveRemoveContainer() {
    docker stop $1;
    docker rm $1;
}

function removeImageByFilter() {
    docker images | grep "$1" | awk -F $' ' '{print $3;}' | xargs -r docker rmi
}
function findImageId () {
    docker images | grep "$1" | awk -F $' ' '{print $3;}';
}

#    setup cassandra and kafka
function setup () {
#    removes existing containers related to cassandra
#    removeImageByFilter "riotdocker.predixionsoftware.com:5000/cassandra";
#    removeImageByFilter "cassandra";
#    kafka
#    removeImageByFilter "nginate/kafka-docker-bundle:0.10";
    saveRemoveContainer "$KAFKA_NAME";
    docker run -d \
     --name="$KAFKA_NAME" \
     -p "$ZOOKEEPER_PORT":2181 -p "$KAFKA_PORT":9092 \
     -e LEADER_REBALANCE_CHECK_INTERVAL=1 \
     -h "$KAFKA_HOST_NAME" \
     nginate/kafka-docker-bundle:0.10;
#   build cassandra image
#    cd $PROJECT_PATH;
#    ./gradlew ':docker:cassandra:buildDockerImage'
    saveRemoveContainer "cassandra";
    IMAGE_ID=$(findImageId 'riotdocker.predixionsoftware.com:5000/cassandra');
    docker run -d \
     --name=cassandra \
     -e JVM_OPTS="-Xmx512m -Xms128m" \
     --net=host $IMAGE_ID;
}
# updates docker images
function update () {
    NODE_IMAGE_NAME="riotdocker.predixionsoftware.com:5000/riot-$1";
    removeImageByFilter "$IMAGE_NAME"
    cd "$PROJECT_PATH"
    ./gradlew ":riot-$1:riot-$1-server:buildDockerImage"
}

function runNode() {
    NODE_IMAGE_NAME="riotdocker.predixionsoftware.com:5000/riot-$NODE_TYPE";
    NODE_ID=$(docker create \
     --name $1 -p $2:8080 \
      -e RIOT_GATEWAY_NAME=$1 -e RIOT_CLOUD_HOST=$RIOT_CLOUD_HOST -e RIOT_CLOUD_PORT=8081\
        $IMAGE_NAME);

    docker start "$NODE_ID"
    docker attach "$NODE_ID"
    docker rm "$NODE_ID"
}

function runCloud() {
    echo "running cloud";
    IMAGE_ID=$(findImageId "riotdocker.predixionsoftware.com:5000/riot-cloud");
    docker create \
     --name="$CLOUD_NAME" \
     -h "$CLOUD_HOST_NAME"\
     --link="$KAFKA_NAME":"$KAFKA_HOST_NAME" \
     -e CLOUD_PUBLIC_HOST="$CLOUD_HOST_NAME" \
     -e CLOUD_PUBLIC_PORT="$CLOUD_PORT" \
     -e CLOUD_KAFKA_BROKERS="$KAFKA_HOST_NAME":"$KAFKA_PORT" \
     -e CLOUD_ZOOKEEPERS="$KAFKA_HOST_NAME":"$ZOOKEEPER_PORT" \
     -p "$CLOUD_PORT:8080" "$IMAGE_ID";
    docker start "$CLOUD_NAME"
    docker attach "$CLOUD_NAME"
    docker rm "$CLOUD_NAME"
}

case "$1" in
    "setup") setup;;
    "upd") update $2;;
    "run") runNode $2 $3;;
    *)echo "Unknown command";;
esac
