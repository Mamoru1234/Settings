#!/usr/bin/env bash

PROJECT_PATH="$HOME/projects/riot"

function saveDockerStart() {
    CONTAINER_ID=$1
    docker start $CONTAINER_ID
    docker attach $CONTAINER_ID
    docker rm $CONTAINER_ID
}

# docker-compose -p riot-cloud -f docker-compose/riot-cloud-env.yml up -d
function startOne() {
    # CONTAINER_ID=$(docker create \
    #     -p 8080:8080 -v ~/temp/config/extensionsConfig.js:/usr/local/riot-one/config/extensionsConfig.js \
    #     --link mqtt:mqtt \
    #     registry.greenwavereality.com/axon/axon-riot-one:1.3.0-SNAPSHOT)
    CONTAINER_ID=$(docker create \
        -p 8080:8080 \
        registry.greenwavereality.com/axon/axon-riot-one:1.3.0-SNAPSHOT)
    saveDockerStart $CONTAINER_ID
}

function startCloud() {
    cd $PROJECT_PATH
    ./gradlew startCloudEnv
    sleep 1m
    ./gradlew keycloakCreateClient flywayMigrate
    sleep 5
    # TEMPORARY
    node ~/projects/emulator/temp/Insert.js
    ./gradlew -Dspring.profiles.active=dev :riot-cloud:bootRun
    ./gradlew removeCloudEnv
    exit
}

function startUI() {
    cd "$PROJECT_PATH/riot-ui";
    npm run $2;
}

function startMqtt() {
    CONTAINER_ID=$(docker create -p 1883:1883 --name mqtt toke/mosquitto)
    saveDockerStart $CONTAINER_ID
}

function startEnv() {
    cd $PROJECT_PATH
    case $1 in
        "start") docker-compose -p riot-cloud -f docker-compose/riot-cloud-env.yml up -d;;
        "down") docker-compose -p riot-cloud -f docker-compose/riot-cloud-env.yml down;;
        *) echo "Unknown command";;
    esac
}
case "$1" in
    "one") startOne $*;;
    "ui") startUI $*;;
    "cloud") startCloud $*;;
    "mqtt") startMqtt $*;;
    "env") startEnv $2;;
    "update") update
    ;;
    *) echo "Unknown command";;
esac
